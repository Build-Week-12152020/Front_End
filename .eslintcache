[{"/Users/aaronmvskoke/PT19/front_end/src/index.js":"1","/Users/aaronmvskoke/PT19/front_end/src/reportWebVitals.js":"2","/Users/aaronmvskoke/PT19/front_end/src/App.js":"3","/Users/aaronmvskoke/PT19/front_end/src/components/login_page/login_page.component.jsx":"4","/Users/aaronmvskoke/PT19/front_end/src/components/login_page/login.component.jsx":"5","/Users/aaronmvskoke/PT19/front_end/src/components/login_page/registration.component.jsx":"6","/Users/aaronmvskoke/PT19/front_end/src/components/PrivateRoute.js":"7","/Users/aaronmvskoke/PT19/front_end/src/components/AddPlantForm.js":"8","/Users/aaronmvskoke/PT19/front_end/src/components/actions/index.js":"9","/Users/aaronmvskoke/PT19/front_end/src/components/utils/axiosWithAuth.js":"10","/Users/aaronmvskoke/PT19/front_end/src/components/reducers/plantReducer.js":"11","/Users/aaronmvskoke/PT19/front_end/src/components/plant_page/plant_page.component.jsx":"12","/Users/aaronmvskoke/PT19/front_end/src/components/plant_page/plant_card.component.jsx":"13"},{"size":500,"mtime":1608237155531,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608237155534,"results":"16","hashOfConfig":"15"},{"size":2294,"mtime":1609919473349,"results":"17","hashOfConfig":"15"},{"size":424,"mtime":1608538672168,"results":"18","hashOfConfig":"15"},{"size":5344,"mtime":1609905588366,"results":"19","hashOfConfig":"15"},{"size":7383,"mtime":1609905955240,"results":"20","hashOfConfig":"15"},{"size":590,"mtime":1608243061044,"results":"21","hashOfConfig":"15"},{"size":2516,"mtime":1609564700724,"results":"22","hashOfConfig":"15"},{"size":2553,"mtime":1609916067603,"results":"23","hashOfConfig":"15"},{"size":364,"mtime":1609820568572,"results":"24","hashOfConfig":"15"},{"size":2316,"mtime":1609823926735,"results":"25","hashOfConfig":"15"},{"size":1509,"mtime":1609919972722,"results":"26","hashOfConfig":"15"},{"size":431,"mtime":1609918818405,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1jlqfsa",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aaronmvskoke/PT19/front_end/src/index.js",[],["57","58"],"/Users/aaronmvskoke/PT19/front_end/src/reportWebVitals.js",[],"/Users/aaronmvskoke/PT19/front_end/src/App.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/login_page/login_page.component.jsx",[],"/Users/aaronmvskoke/PT19/front_end/src/components/login_page/login.component.jsx",["59"],"import React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { loginToApp } from \"../actions\";\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport Skeleton from 'react-loading-skeleton';\n\nconst Wrapper = styled.div`\nwidth: 50%;\npadding: 25px;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\nform {\n    display: flex;\n    flex-direction: column;\n}\nbutton {\n    margin: 15px 0;\n    border: none;\n    background-color: #d3d3d3;\n    background-color: white;\n    border: 2px solid #d3d3d3;\n    &:hover {\n        background-color: #d3d3d3;\n        border: 2px solid black;\n    }\n    &:disabled {\n        border: 2px solid orange;\n        cursor: not-allowed;\n    }\n}\nlabel {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 10px 0;\n}\ninput {\n    border: 1px solid #d3d3d3;\n    text-align: center;\n}\n`\n\n\n\nconst Login = (props) => {\n\n    // component level state\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const [loginCredentls, setLoginCredntls] = useState({\n        username: \"\",\n        password: \"\"\n    });\n\n    \n\n    const handleChanges = (e) => {\n        setLoginCredntls({...loginCredentls,\n        [e.target.name]: e.target.value\n        });\n        console.log(loginCredentls)\n    };\n\n    const handleSubmit = (e) => {\n        // prevent page reload\n        e.preventDefault();\n        // action from props/connect with loginCredentls passed as param\n        props.loginToApp(loginCredentls);\n        setLoginCredntls({\n            username: \"\",\n            password: \"\"\n        });\n        this.props.history.push('./login');\n    };\n\n    \n\n    const formSchema = Yup.object().shape({\n        username: Yup.string().required('Username is required!'),\n        password: Yup.string().required('Password is required!'),\n        })\n\n    useEffect(() => {\n                formSchema.isValid(loginCredentls).then((valid) => {\n                    setButtonDisabled(!valid)\n                })\n            }, [loginCredentls])\n\n    return (\n        <Wrapper>\n            {\n                props.isLoadingLogin ? (\n                    <form>\n                        <Skeleton variant=\"rect\" />\n                        <Skeleton variant=\"rect\" />\n                        <Skeleton variant=\"rect\" />\n                    </form>\n                ) : props.error ? (\n                <div className=\"error\">{props.error}</div>\n                ) :\n                \n            <form onSubmit={handleSubmit}>\n                <header className=\"form-header\">\n                    <h4>\n                        Login\n                    </h4>\n                </header>\n                <label htmlFor=\"username\">\n                    Username\n                    <input \n                        type=\"text\"\n                        id=\"username\" \n                        name=\"username\"\n                        value={loginCredentls.username}\n                        onChange={handleChanges} \n                        placeholder=\"PlantLover123\"\n                        minLength=\"5\"\n                        required \n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input \n                        type=\"password\"\n                        id=\"password\" \n                        name=\"password\"\n                        value={loginCredentls.password}\n                        onChange={handleChanges} \n                        placeholder=\"**********\"\n                        minLength=\"8\"\n                        required \n                    />\n                </label>\n                \n                \n                <button type=\"submit\" disabled={buttonDisabled}>Log In</button>\n            </form>\n            }\n        </Wrapper>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoadingLogin: state.is_loading_login,\n        \n        loginSuccess: state.login_success,\n        error: state.error,\n    }\n}\n\nexport default connect( mapStateToProps, {loginToApp} )(Login);\n\n\n\n\n\n\n// const Wrapper = styled.div`\n// width: 50%;\n// padding: 25px;\n// display: flex;\n// flex-direction: column;\n// justify-content: space-around;\n// form {\n//     display: flex;\n//     flex-direction: column;\n// }\n// button {\n//     margin: 15px 0;\n//     border: none;\n//     background-color: #d3d3d3;\n//     background-color: white;\n//     border: 2px solid #d3d3d3;\n//     &:hover {\n//         background-color: #d3d3d3;\n//         border: 2px solid black;\n//     }\n//     &:disabled {\n//         border: 2px solid orange;\n//         cursor: not-allowed;\n//     }\n// }\n// label {\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     margin: 10px 0;\n// }\n// input {\n//     border: 1px solid #d3d3d3;\n//     text-align: center;\n// }\n// `\n\n// const formSchema = Yup.object().shape({\n// username: Yup.string().required('Username is required!'),\n// password: Yup.string().required('Password is required!'),\n// })\n\n// const Login = () => {\n// const [form, setForm] = useState({ username: '', password: '' })\n// const [buttonDisabled, setButtonDisabled] = useState(true)\n\n// useEffect(() => {\n//     formSchema.isValid(form).then((valid) => {\n//         setButtonDisabled(!valid)\n//     })\n// }, [form])","/Users/aaronmvskoke/PT19/front_end/src/components/login_page/registration.component.jsx",["60"],"import React, { useState, useEffect } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions\";\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\n\nconst Wrapper = styled.div`\n    width: 50%;\n    padding: 25px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    border: 1px solid blue;\n`\n\n\nconst Registration = (props) => {\n    \n    // component level state\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const [newUser, setNewUser] = useState({\n        username: \"\",\n        password: \"\",\n        phone: \"\"\n    });\n\n    \n\n    const handleChanges = (e) => {\n        setNewUser({...newUser,\n        [e.target.name]: e.target.value\n        });\n        console.log(newUser);\n    };\n\n    const handleSubmit = (e) => {\n        // prevent default page reload\n\n        e.preventDefault();\n        // action from actions>index.js\n        props.registerUser(newUser);\n        setNewUser({\n            username: \"\",\n            password: \"\",\n            phone: \"\"\n        });\n    };\n\n\n    const formSchema = Yup.object().shape({\n        username: Yup.string().required('Username is required!'),\n        password: Yup.string().required('Password is required!'),\n        })\n\n    useEffect(() => {\n                formSchema.isValid(newUser).then((valid) => {\n                    setButtonDisabled(!valid)\n                })\n            }, [newUser])\n\n\n    return (\n    <Wrapper>{\n        props.isLoadingRegister ? (\n            <form>\n                <Skeleton variant=\"text\"/>\n                <Skeleton variant=\"text\"/>\n                <Skeleton variant=\"text\"/>\n                <Skeleton variant=\"rect\"/>\n            </form>\n        ) : props.error ? (\n            <div className=\"error\">{props.error}</div>\n        ) :\n        \n            <form onSubmit={handleSubmit}>\n                <header className=\"form-header\">\n                    <h4>\n                        Sign Up\n                    </h4>\n                </header>\n                <label htmlFor=\"username\">\n                    Username\n                    <input \n                        id=\"username\"\n                        type=\"text\" \n                        name=\"username\" \n                        value={newUser.username}\n                        onChange={handleChanges}\n                        placeholder=\"Name\" \n                    />\n                </label>\n                \n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        id=\"password\"\n                        type=\"password\" \n                        name=\"password\"\n                        value={newUser.password}\n                        onChange={handleChanges} \n                        placeholder=\"********\" \n                    />\n                </label>\n                \n                <label htmlFor=\"phone\">\n                    Mobile Number\n                    <input\n                        id=\"phone\"\n                        type=\"number\"\n                        name=\"phone\"\n                        value={newUser.phone}\n                        onChange={handleChanges}\n                        placeholder=\"(123) 456-7890\"\n                        />\n                </label>\n                <button disabled={buttonDisabled}>Register</button>\n            </form>   \n        \n        \n             \n                // <Wrapper>\n                //     <form onSubmit={handleSubmit}>\n                //         <header className=\"form-header\">\n                //             <h4>\n                //                 Sign Up\n                //             </h4>\n                //         </header>\n                //         <label htmlFor=\"username\">\n                //             Username\n                //             <input \n                //                 id=\"username\"\n                //                 type=\"text\" \n                //                 name=\"name\" \n                //                 value={newUser.username}\n                //                 onChange={handleChanges}\n                //                 placeholder=\"Name\" \n                //             />\n                //         </label>\n                        \n                //         <label htmlFor=\"password\">\n                //             Password\n                //             <input\n                //                 id=\"password\"\n                //                 type=\"password\" \n                //                 name=\"password\"\n                //                 value={newUser.password}\n                //                 onChange={handleChanges} \n                //                 placeholder=\"********\" \n                //             />\n                //         </label>\n                        \n                //         <label htmlFor=\"phone\">\n                //             Mobile Number\n                //             <input\n                //                 id=\"phone\"\n                //                 type=\"number\"\n                //                 name=\"phone\"\n                //                 value={newUser.phone}\n                //                 onChange={handleChanges}\n                //                 placeholder=\"(123) 456-7890\"\n                //                 />\n                //         </label>\n                //         <button>Register</button>\n                //     </form>   \n                // </Wrapper>\n                \n            \n        \n    }</Wrapper>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoadingRegister: state.is_loading_register,\n        isRegister: state.isRegister,\n        registerSuccess: state.register_success,\n        error: state.error,\n    }\n}\n\nexport default connect( mapStateToProps, { registerUser })(Registration);\n\n\n\n/* <header className=\"form-header\">\n                <h4>\n                    Sign Up\n                </h4>\n            </header>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">\n                    Username\n                    <input \n                        id=\"username\"\n                        type=\"text\" \n                        name=\"name\" \n                        value={newUser.username}\n                        onChange={handleChanges}\n                        placeholder=\"Name\" \n                    />\n                </label>\n                \n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        id=\"password\"\n                        type=\"password\" \n                        name=\"password\"\n                        value={newUser.password}\n                        onChange={handleChanges} \n                        placeholder=\"********\" \n                    />\n                </label>\n                \n                <label htmlFor=\"phone\">\n                    Mobile Number\n                    <input\n                        id=\"phone\"\n                        type=\"number\"\n                        name=\"phone\"\n                        value={newUser.phone}\n                        onChange={handleChanges}\n                        placeholder=\"(123) 456-7890\"\n                        />\n                </label>\n                <button>Register</button>\n            </form> */","/Users/aaronmvskoke/PT19/front_end/src/components/PrivateRoute.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/AddPlantForm.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/actions/index.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/utils/axiosWithAuth.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/reducers/plantReducer.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/plant_page/plant_page.component.jsx",["61","62","63"],"/Users/aaronmvskoke/PT19/front_end/src/components/plant_page/plant_card.component.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":88,"column":16,"nodeType":"70","endLine":88,"endColumn":32,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"69","line":60,"column":16,"nodeType":"70","endLine":60,"endColumn":25,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":13,"column":12,"nodeType":"75","messageId":"76","endLine":13,"endColumn":25},{"ruleId":"68","severity":1,"message":"78","line":18,"column":7,"nodeType":"70","endLine":18,"endColumn":9,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["82"],["83"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'currentPlants' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [formSchema, loginCredentls]",{"range":"91","text":"92"},"Update the dependencies array to be: [formSchema, newUser]",{"range":"93","text":"94"},"Update the dependencies array to be: [props]",{"range":"95","text":"96"},[2043,2059],"[formSchema, loginCredentls]",[1485,1494],"[formSchema, newUser]",[569,571],"[props]"]