[{"/Users/aaronmvskoke/PT19/front_end/src/index.js":"1","/Users/aaronmvskoke/PT19/front_end/src/reportWebVitals.js":"2","/Users/aaronmvskoke/PT19/front_end/src/App.js":"3","/Users/aaronmvskoke/PT19/front_end/src/components/login_page/login_page.component.jsx":"4","/Users/aaronmvskoke/PT19/front_end/src/components/login_page/login.component.jsx":"5","/Users/aaronmvskoke/PT19/front_end/src/components/login_page/registration.component.jsx":"6","/Users/aaronmvskoke/PT19/front_end/src/components/PrivateRoute.js":"7","/Users/aaronmvskoke/PT19/front_end/src/components/AddPlantForm.js":"8","/Users/aaronmvskoke/PT19/front_end/src/components/actions/index.js":"9","/Users/aaronmvskoke/PT19/front_end/src/components/utils/axiosWithAuth.js":"10","/Users/aaronmvskoke/PT19/front_end/src/components/reducers/plantReducer.js":"11","/Users/aaronmvskoke/PT19/front_end/src/components/plant_page/plant_page.component.jsx":"12","/Users/aaronmvskoke/PT19/front_end/src/components/plant_page/plant_card.component.jsx":"13"},{"size":500,"mtime":1608237155531,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608237155534,"results":"16","hashOfConfig":"15"},{"size":2295,"mtime":1609926270866,"results":"17","hashOfConfig":"15"},{"size":424,"mtime":1608538672168,"results":"18","hashOfConfig":"15"},{"size":5416,"mtime":1609974698818,"results":"19","hashOfConfig":"15"},{"size":7345,"mtime":1609927268359,"results":"20","hashOfConfig":"15"},{"size":590,"mtime":1608243061044,"results":"21","hashOfConfig":"15"},{"size":2516,"mtime":1609564700724,"results":"22","hashOfConfig":"15"},{"size":2919,"mtime":1609927268359,"results":"23","hashOfConfig":"15"},{"size":364,"mtime":1609820568572,"results":"24","hashOfConfig":"15"},{"size":2540,"mtime":1609925892664,"results":"25","hashOfConfig":"15"},{"size":1664,"mtime":1609926166174,"results":"26","hashOfConfig":"15"},{"size":431,"mtime":1609918818405,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1jlqfsa",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aaronmvskoke/PT19/front_end/src/index.js",[],["56","57"],"/Users/aaronmvskoke/PT19/front_end/src/reportWebVitals.js",[],"/Users/aaronmvskoke/PT19/front_end/src/App.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/login_page/login_page.component.jsx",[],"/Users/aaronmvskoke/PT19/front_end/src/components/login_page/login.component.jsx",["58"],"/Users/aaronmvskoke/PT19/front_end/src/components/login_page/registration.component.jsx",["59"],"import React, { useState, useEffect } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions\";\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\n\nconst Wrapper = styled.div`\n    width: 50%;\n    padding: 25px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    border: 1px solid blue;\n`\n\n\nconst Registration = (props) => {\n    \n    // component level state\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const [newUser, setNewUser] = useState({\n        username: \"\",\n        password: \"\",\n        phone: \"\"\n    });\n\n    \n\n    const handleChanges = (e) => {\n        setNewUser({...newUser,\n        [e.target.name]: e.target.value\n        });\n        console.log(newUser);\n    };\n\n    const handleSubmit = (e) => {\n        // prevent default page reload\n\n        e.preventDefault();\n        // action from actions>index.js\n        props.registerUser(newUser);\n        setNewUser({\n            username: \"\",\n            password: \"\",\n            phone: \"\"\n        });\n    };\n\n\n    const formSchema = Yup.object().shape({\n        username: Yup.string().required('Username is required!'),\n        password: Yup.string().required('Password is required!'),\n        })\n\n    useEffect(() => {\n                formSchema.isValid(newUser).then((valid) => {\n                    setButtonDisabled(!valid)\n                })\n            }, [newUser])\n\n\n    return (\n    <Wrapper>{\n        props.isLoadingRegister ? (\n            <form>\n                <Skeleton variant=\"text\"/>\n                <Skeleton variant=\"text\"/>\n                <Skeleton variant=\"text\"/>\n                <Skeleton variant=\"rect\"/>\n            </form>\n        ) : props.error ? (\n            <div className=\"error\">{props.error}</div>\n        ) :\n        \n            <form onSubmit={handleSubmit}>\n                <header className=\"form-header\">\n                    <h4>\n                        Sign Up\n                    </h4>\n                </header>\n                <label htmlFor=\"username\">\n                    Username\n                    <input \n                        id=\"username\"\n                        type=\"text\" \n                        name=\"username\" \n                        value={newUser.username}\n                        onChange={handleChanges}\n                        placeholder=\"Name\" \n                    />\n                </label>\n                \n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        id=\"password\"\n                        type=\"password\" \n                        name=\"password\"\n                        value={newUser.password}\n                        onChange={handleChanges} \n                        placeholder=\"********\" \n                    />\n                </label>\n                \n                <label htmlFor=\"phone\">\n                    Mobile Number\n                    <input\n                        id=\"phone\"\n                        type=\"number\"\n                        name=\"phone\"\n                        value={newUser.phone}\n                        onChange={handleChanges}\n                        placeholder=\"(123) 456-7890\"\n                        />\n                </label>\n                <button disabled={buttonDisabled}>Register</button>\n            </form>   \n        \n        \n             \n                // <Wrapper>\n                //     <form onSubmit={handleSubmit}>\n                //         <header className=\"form-header\">\n                //             <h4>\n                //                 Sign Up\n                //             </h4>\n                //         </header>\n                //         <label htmlFor=\"username\">\n                //             Username\n                //             <input \n                //                 id=\"username\"\n                //                 type=\"text\" \n                //                 name=\"name\" \n                //                 value={newUser.username}\n                //                 onChange={handleChanges}\n                //                 placeholder=\"Name\" \n                //             />\n                //         </label>\n                        \n                //         <label htmlFor=\"password\">\n                //             Password\n                //             <input\n                //                 id=\"password\"\n                //                 type=\"password\" \n                //                 name=\"password\"\n                //                 value={newUser.password}\n                //                 onChange={handleChanges} \n                //                 placeholder=\"********\" \n                //             />\n                //         </label>\n                        \n                //         <label htmlFor=\"phone\">\n                //             Mobile Number\n                //             <input\n                //                 id=\"phone\"\n                //                 type=\"number\"\n                //                 name=\"phone\"\n                //                 value={newUser.phone}\n                //                 onChange={handleChanges}\n                //                 placeholder=\"(123) 456-7890\"\n                //                 />\n                //         </label>\n                //         <button>Register</button>\n                //     </form>   \n                // </Wrapper>\n                \n            \n        \n    }</Wrapper>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoadingRegister: state.is_loading_register,\n        isRegister: state.isRegister,\n        registerSuccess: state.register_success,\n        error: state.error,\n    }\n}\n\nexport default connect( mapStateToProps, { registerUser })(Registration);\n\n\n\n/* <header className=\"form-header\">\n                <h4>\n                    Sign Up\n                </h4>\n            </header>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">\n                    Username\n                    <input \n                        id=\"username\"\n                        type=\"text\" \n                        name=\"name\" \n                        value={newUser.username}\n                        onChange={handleChanges}\n                        placeholder=\"Name\" \n                    />\n                </label>\n                \n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        id=\"password\"\n                        type=\"password\" \n                        name=\"password\"\n                        value={newUser.password}\n                        onChange={handleChanges} \n                        placeholder=\"********\" \n                    />\n                </label>\n                \n                <label htmlFor=\"phone\">\n                    Mobile Number\n                    <input\n                        id=\"phone\"\n                        type=\"number\"\n                        name=\"phone\"\n                        value={newUser.phone}\n                        onChange={handleChanges}\n                        placeholder=\"(123) 456-7890\"\n                        />\n                </label>\n                <button>Register</button>\n            </form> */","/Users/aaronmvskoke/PT19/front_end/src/components/PrivateRoute.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/AddPlantForm.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/actions/index.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/utils/axiosWithAuth.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/reducers/plantReducer.js",[],"/Users/aaronmvskoke/PT19/front_end/src/components/plant_page/plant_page.component.jsx",["60","61","62"],"/Users/aaronmvskoke/PT19/front_end/src/components/plant_page/plant_card.component.jsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":91,"column":16,"nodeType":"69","endLine":91,"endColumn":32,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"68","line":60,"column":16,"nodeType":"69","endLine":60,"endColumn":25,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":13,"column":12,"nodeType":"74","messageId":"75","endLine":13,"endColumn":25},{"ruleId":"67","severity":1,"message":"77","line":18,"column":7,"nodeType":"69","endLine":18,"endColumn":9,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["81"],["82"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'currentPlants' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [formSchema, loginCredentls]",{"range":"90","text":"91"},"Update the dependencies array to be: [formSchema, newUser]",{"range":"92","text":"93"},"Update the dependencies array to be: [props]",{"range":"94","text":"95"},[2115,2131],"[formSchema, loginCredentls]",[1485,1494],"[formSchema, newUser]",[569,571],"[props]"]